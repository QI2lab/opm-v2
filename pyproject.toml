# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# read more about configuring hatch at:
# https://hatch.pypa.io/latest/config/build/
[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

# https://peps.python.org/pep-0621/
[project]
name = "opm-v2"
version = "0.1.0"
description = "qi2lab-OPM control using pymmcore-gui"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "BSD-3-Clause" }
authors = [{ name = "Douglas Shepherd", email = "douglas.shepherd@asu.edu" }]
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",    
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
# add your package dependencies here
dependencies = ["pymmcore-plus", "pymmcore-widgets", "matplotlib",
                "pydaqmx", "pyserial", "scipy", "numba",
                "pycparser==2.21","pythonnet==3.0.3",
                "pymmcore-gui @ git+https://github.com/pymmcore-plus/pymmcore-gui.git@f0eb39a"]

[tool.hatch.metadata]
allow-direct-references = true

# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
# "extras" (e.g. for `pip install .[test]`)
[project.optional-dependencies]
# add dependencies used for testing here
test = ["pytest", "pytest-cov"]
# add anything else you like to have in your dev environment here
dev = [
    "ipython",
    "pdbpp",  # https://github.com/pdbpp/pdbpp
    "rich",  # https://github.com/Textualize/rich
]

[project.urls]
homepage = "https://github.com/qi2lab/opm-v2"
repository = "https://github.com/qi2lab/opm-v2"

# Entry points
# https://peps.python.org/pep-0621/#entry-points
# same as console_scripts entry point
# [project.scripts]
# opm-v2-cli = "opm_v2:main_cli"

# [project.entry-points."some.group"]
# tomatoes = "opm_v2:main_tomatoes"



# https://docs.pytest.org/
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
filterwarnings = ["error"]

# https://coverage.readthedocs.io/
[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
    "pass",
]

[tool.coverage.run]
source = ["opm_v2"]

# https://github.com/mgedmin/check-manifest#configuration
# add files that you want check-manifest to explicitly ignore here
# (files that are in the repo but shouldn't go in the package)
[tool.check-manifest]
ignore = [
    ".pre-commit-config.yaml",
    ".ruff_cache/**/*",
    "tests/**/*",
]
